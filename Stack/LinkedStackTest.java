package Stack;import java.util.Scanner;public class LinkedStackTest {public static void main(String[] args) {LinkedStack<String> stack = new LinkedStack<>();Scanner scanner = new Scanner(System.in);while (true) {System.out.println("Linked Stack Operations:");System.out.println("1. Push");System.out.println("2. Pop");System.out.println("3. Peek");System.out.println("4. Display");System.out.println("5. Clear");System.out.println("6. Is Empty");System.out.println("7. Exit");System.out.print("Choose a number (1-7): ");try {int choice = scanner.nextInt();scanner.nextLine();switch (choice) {case 1:System.out.print("Enter item to push: ");String item = scanner.nextLine();if (!item.trim().isEmpty()) {stack.push(item);System.out.println("Pushed: " + item);}break;case 2:if (!stack.isEmpty()) {String poppedItem = stack.pop();System.out.println("Popped: " + poppedItem);} else {System.out.println("Stack is empty!");}break;case 3:if (!stack.isEmpty()) {String topItem = stack.peek();System.out.println("Top item: " + topItem);} else {System.out.println("Stack is empty!");}break;case 4:if (!stack.isEmpty()) {stack.display();} else {System.out.println("Stack is empty!");}break;case 5:stack.clear();System.out.println("Stack cleared");break;case 6:System.out.println("Stack is " + (stack.isEmpty() ? "empty" : "not empty"));break;case 7:System.exit(0);default:System.out.println("Invalid option. Please enter a number between 1 and 7.");}} catch (java.util.InputMismatchException e) {System.out.println("Please enter a valid number.");scanner.nextLine();} catch (EmptyStackException e) {System.out.println(e.getMessage());}}}}
